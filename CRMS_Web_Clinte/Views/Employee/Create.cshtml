@model CRMS_Data.Entities.Employee

@{
    ViewBag.Title = "Create";
}

@{
    var message = TempData["Message"] ?? string.Empty;
}

<h2>Add New Employee</h2>

@using (Html.BeginForm("Create", "Employee", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(m => m.Address, new { @class = "form-control input-sm" })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.Gender, new SelectList(Enum.GetValues(typeof(CRMS_Data.EnumCollections.EnumCollections.GenderList))), new { @id = "Gender", @class = "form-control input-sm" })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.Photo, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        <input type="file" name="photoUpload" id="photoUpload" class="form-control input-sm" onchange="readURL(this);" />
                        <br /><span style="height: 150px;width: 150px;"><img id="Photo1" src="~/Images/man.jpg" style="height: 150px; width: 150px;" /></span>
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Birthdate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Birthdate, new { @class = "datepicker form-control input-sm", placeholder = "Enter Birth Date" })
                @Html.ValidationMessageFor(model => model.Birthdate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NationalId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NationalId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NationalId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PassportNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PassportNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PassportNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Role, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            <label class="control-label col-md-2" for="Username">Username</label>
            <div class="col-md-10">
                <input type="text" name="Username" class="form-control" id="Username" required="required" placeholder="Username">
            </div>
        </div>
        
        <div class="form-group">
            <label class="control-label col-md-2" for="Password">Password</label>
            <div class="col-md-10">
                <input type="password" name="Password" class="form-control" id="Password" required="required" placeholder="Password">
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    <script>
        function onchangeevent(keyWord) {

            if (keyWord == "username") {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("CheckUsername", "Home")',
                    data: '{username: "' + $('#Username').val() + '" }',// user name or email value
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        if (response.toString() == 'true') {
                            $('#errorUsernameMessage').html("Username already exists.");
                        }
                    },
                    failure: function (response) {
                        alert(response);
                    }
                });
            } else {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("CheckUsername", "Home")',
                    data: '{username: "' + $('#Email').val() + '" }',// user name or email value
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        if (response.toString() == 'true') {
                            $('#errorEmailMessage').html("Email already exists.");
                        }
                    },
                    failure: function (response) {
                        alert(response);
                    }
                });
            }
        }
    </script>
    <script>

        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#Photo1')
                        .attr('src', e.target.result)
                        .width(150)
                        .height(200);
                };

                reader.readAsDataURL(input.files[0]);
            }
        }
    </script>

    <script>
        $(document).ready(function () {
            $(".datepicker").datetimepicker();
        });
    </script>

    <script type="text/javascript">
        var message = '@message';
        if (message)
            alert(message);
    </script>



}




